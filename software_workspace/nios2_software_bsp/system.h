/*
 * system.h - SOPC Builder system and BSP software package information
 *
 * Machine generated for CPU 'nios2_cpu' in SOPC Builder design 'nios_system'
 * SOPC Builder design path: C:/Users/Korisnik/Documents/ETF/Elektronika/Diplomski/workspace/nios_system.sopcinfo
 *
 * Generated: Tue Aug 30 10:06:31 CEST 2016
 */

/*
 * DO NOT MODIFY THIS FILE
 *
 * Changing this file will have subtle consequences
 * which will almost certainly lead to a nonfunctioning
 * system. If you do modify this file, be aware that your
 * changes will be overwritten and lost when this file
 * is generated again.
 *
 * DO NOT MODIFY THIS FILE
 */

/*
 * License Agreement
 *
 * Copyright (c) 2008
 * Altera Corporation, San Jose, California, USA.
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * This agreement shall be governed in all respects by the laws of the State
 * of California and by the laws of the United States of America.
 */

#ifndef __SYSTEM_H_
#define __SYSTEM_H_

/* Include definitions from linker script generator */
#include "linker.h"


/*
 * CPU configuration
 *
 */

#define ALT_CPU_ARCHITECTURE "altera_nios2_qsys"
#define ALT_CPU_BIG_ENDIAN 0
#define ALT_CPU_BREAK_ADDR 0x02000820
#define ALT_CPU_CPU_FREQ 100000000u
#define ALT_CPU_CPU_ID_SIZE 1
#define ALT_CPU_CPU_ID_VALUE 0x00000000
#define ALT_CPU_CPU_IMPLEMENTATION "tiny"
#define ALT_CPU_DATA_ADDR_WIDTH 0x1a
#define ALT_CPU_DCACHE_LINE_SIZE 0
#define ALT_CPU_DCACHE_LINE_SIZE_LOG2 0
#define ALT_CPU_DCACHE_SIZE 0
#define ALT_CPU_EXCEPTION_ADDR 0x01000020
#define ALT_CPU_FLUSHDA_SUPPORTED
#define ALT_CPU_FREQ 100000000
#define ALT_CPU_HARDWARE_DIVIDE_PRESENT 0
#define ALT_CPU_HARDWARE_MULTIPLY_PRESENT 0
#define ALT_CPU_HARDWARE_MULX_PRESENT 0
#define ALT_CPU_HAS_DEBUG_CORE 1
#define ALT_CPU_HAS_DEBUG_STUB
#define ALT_CPU_HAS_JMPI_INSTRUCTION
#define ALT_CPU_ICACHE_LINE_SIZE 0
#define ALT_CPU_ICACHE_LINE_SIZE_LOG2 0
#define ALT_CPU_ICACHE_SIZE 0
#define ALT_CPU_INST_ADDR_WIDTH 0x1a
#define ALT_CPU_NAME "nios2_cpu"
#define ALT_CPU_RESET_ADDR 0x01000000


/*
 * CPU configuration (with legacy prefix - don't use these anymore)
 *
 */

#define NIOS2_BIG_ENDIAN 0
#define NIOS2_BREAK_ADDR 0x02000820
#define NIOS2_CPU_FREQ 100000000u
#define NIOS2_CPU_ID_SIZE 1
#define NIOS2_CPU_ID_VALUE 0x00000000
#define NIOS2_CPU_IMPLEMENTATION "tiny"
#define NIOS2_DATA_ADDR_WIDTH 0x1a
#define NIOS2_DCACHE_LINE_SIZE 0
#define NIOS2_DCACHE_LINE_SIZE_LOG2 0
#define NIOS2_DCACHE_SIZE 0
#define NIOS2_EXCEPTION_ADDR 0x01000020
#define NIOS2_FLUSHDA_SUPPORTED
#define NIOS2_HARDWARE_DIVIDE_PRESENT 0
#define NIOS2_HARDWARE_MULTIPLY_PRESENT 0
#define NIOS2_HARDWARE_MULX_PRESENT 0
#define NIOS2_HAS_DEBUG_CORE 1
#define NIOS2_HAS_DEBUG_STUB
#define NIOS2_HAS_JMPI_INSTRUCTION
#define NIOS2_ICACHE_LINE_SIZE 0
#define NIOS2_ICACHE_LINE_SIZE_LOG2 0
#define NIOS2_ICACHE_SIZE 0
#define NIOS2_INST_ADDR_WIDTH 0x1a
#define NIOS2_RESET_ADDR 0x01000000


/*
 * Define for each module class mastered by the CPU
 *
 */

#define __ALTERA_AVALON_JTAG_UART
#define __ALTERA_AVALON_NEW_SDRAM_CONTROLLER
#define __ALTERA_AVALON_PIO
#define __ALTERA_AVALON_SGDMA
#define __ALTERA_AVALON_TIMER
#define __ALTERA_NIOS2_QSYS
#define __ALTPLL
#define __RSA_WRAPPER


/*
 * System configuration
 *
 */

#define ALT_DEVICE_FAMILY "Cyclone IV E"
#define ALT_ENHANCED_INTERRUPT_API_PRESENT
#define ALT_IRQ_BASE NULL
#define ALT_LOG_PORT "/dev/null"
#define ALT_LOG_PORT_BASE 0x0
#define ALT_LOG_PORT_DEV null
#define ALT_LOG_PORT_TYPE ""
#define ALT_NUM_EXTERNAL_INTERRUPT_CONTROLLERS 0
#define ALT_NUM_INTERNAL_INTERRUPT_CONTROLLERS 1
#define ALT_NUM_INTERRUPT_CONTROLLERS 1
#define ALT_STDERR "/dev/jtag_uart"
#define ALT_STDERR_BASE 0x2001160
#define ALT_STDERR_DEV jtag_uart
#define ALT_STDERR_IS_JTAG_UART
#define ALT_STDERR_PRESENT
#define ALT_STDERR_TYPE "altera_avalon_jtag_uart"
#define ALT_STDIN "/dev/jtag_uart"
#define ALT_STDIN_BASE 0x2001160
#define ALT_STDIN_DEV jtag_uart
#define ALT_STDIN_IS_JTAG_UART
#define ALT_STDIN_PRESENT
#define ALT_STDIN_TYPE "altera_avalon_jtag_uart"
#define ALT_STDOUT "/dev/jtag_uart"
#define ALT_STDOUT_BASE 0x2001160
#define ALT_STDOUT_DEV jtag_uart
#define ALT_STDOUT_IS_JTAG_UART
#define ALT_STDOUT_PRESENT
#define ALT_STDOUT_TYPE "altera_avalon_jtag_uart"
#define ALT_SYSTEM_NAME "nios_system"


/*
 * altera_hostfs configuration
 *
 */

#define ALTERA_HOSTFS_NAME "/mnt/host"


/*
 * hal configuration
 *
 */

#define ALT_MAX_FD 32
#define ALT_SYS_CLK TIMER
#define ALT_TIMESTAMP_CLK none


/*
 * jtag_uart configuration
 *
 */

#define ALT_MODULE_CLASS_jtag_uart altera_avalon_jtag_uart
#define JTAG_UART_BASE 0x2001160
#define JTAG_UART_IRQ 0
#define JTAG_UART_IRQ_INTERRUPT_CONTROLLER_ID 0
#define JTAG_UART_NAME "/dev/jtag_uart"
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_SPAN 8
#define JTAG_UART_TYPE "altera_avalon_jtag_uart"
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8


/*
 * pi_buttons configuration
 *
 */

#define ALT_MODULE_CLASS_pi_buttons altera_avalon_pio
#define PI_BUTTONS_BASE 0x2001150
#define PI_BUTTONS_BIT_CLEARING_EDGE_REGISTER 1
#define PI_BUTTONS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PI_BUTTONS_CAPTURE 1
#define PI_BUTTONS_DATA_WIDTH 2
#define PI_BUTTONS_DO_TEST_BENCH_WIRING 0
#define PI_BUTTONS_DRIVEN_SIM_VALUE 0
#define PI_BUTTONS_EDGE_TYPE "RISING"
#define PI_BUTTONS_FREQ 100000000
#define PI_BUTTONS_HAS_IN 1
#define PI_BUTTONS_HAS_OUT 0
#define PI_BUTTONS_HAS_TRI 0
#define PI_BUTTONS_IRQ 1
#define PI_BUTTONS_IRQ_INTERRUPT_CONTROLLER_ID 0
#define PI_BUTTONS_IRQ_TYPE "EDGE"
#define PI_BUTTONS_NAME "/dev/pi_buttons"
#define PI_BUTTONS_RESET_VALUE 0
#define PI_BUTTONS_SPAN 16
#define PI_BUTTONS_TYPE "altera_avalon_pio"


/*
 * pll configuration
 *
 */

#define ALT_MODULE_CLASS_pll altpll
#define PLL_BASE 0x2001130
#define PLL_IRQ -1
#define PLL_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PLL_NAME "/dev/pll"
#define PLL_SPAN 16
#define PLL_TYPE "altpll"


/*
 * po_leds configuration
 *
 */

#define ALT_MODULE_CLASS_po_leds altera_avalon_pio
#define PO_LEDS_BASE 0x2001140
#define PO_LEDS_BIT_CLEARING_EDGE_REGISTER 0
#define PO_LEDS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PO_LEDS_CAPTURE 0
#define PO_LEDS_DATA_WIDTH 8
#define PO_LEDS_DO_TEST_BENCH_WIRING 0
#define PO_LEDS_DRIVEN_SIM_VALUE 0
#define PO_LEDS_EDGE_TYPE "NONE"
#define PO_LEDS_FREQ 100000000
#define PO_LEDS_HAS_IN 0
#define PO_LEDS_HAS_OUT 1
#define PO_LEDS_HAS_TRI 0
#define PO_LEDS_IRQ -1
#define PO_LEDS_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PO_LEDS_IRQ_TYPE "NONE"
#define PO_LEDS_NAME "/dev/po_leds"
#define PO_LEDS_RESET_VALUE 255
#define PO_LEDS_SPAN 16
#define PO_LEDS_TYPE "altera_avalon_pio"


/*
 * rsa_wrapper configuration
 *
 */

#define ALT_MODULE_CLASS_rsa_wrapper rsa_wrapper
#define RSA_WRAPPER_BASE 0x2001120
#define RSA_WRAPPER_IRQ -1
#define RSA_WRAPPER_IRQ_INTERRUPT_CONTROLLER_ID -1
#define RSA_WRAPPER_NAME "/dev/rsa_wrapper"
#define RSA_WRAPPER_SPAN 16
#define RSA_WRAPPER_TYPE "rsa_wrapper"


/*
 * sdram configuration
 *
 */

#define ALT_MODULE_CLASS_sdram altera_avalon_new_sdram_controller
#define SDRAM_BASE 0x1000000
#define SDRAM_CAS_LATENCY 3
#define SDRAM_CONTENTS_INFO
#define SDRAM_INIT_NOP_DELAY 0.0
#define SDRAM_INIT_REFRESH_COMMANDS 2
#define SDRAM_IRQ -1
#define SDRAM_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SDRAM_IS_INITIALIZED 1
#define SDRAM_NAME "/dev/sdram"
#define SDRAM_POWERUP_DELAY 100.0
#define SDRAM_REFRESH_PERIOD 15.625
#define SDRAM_REGISTER_DATA_IN 1
#define SDRAM_SDRAM_ADDR_WIDTH 0x17
#define SDRAM_SDRAM_BANK_WIDTH 2
#define SDRAM_SDRAM_COL_WIDTH 9
#define SDRAM_SDRAM_DATA_WIDTH 16
#define SDRAM_SDRAM_NUM_BANKS 4
#define SDRAM_SDRAM_NUM_CHIPSELECTS 1
#define SDRAM_SDRAM_ROW_WIDTH 12
#define SDRAM_SHARED_DATA 0
#define SDRAM_SIM_MODEL_BASE 0
#define SDRAM_SPAN 16777216
#define SDRAM_STARVATION_INDICATOR 0
#define SDRAM_TRISTATE_BRIDGE_SLAVE ""
#define SDRAM_TYPE "altera_avalon_new_sdram_controller"
#define SDRAM_T_AC 5.5
#define SDRAM_T_MRD 3
#define SDRAM_T_RCD 20.0
#define SDRAM_T_RFC 70.0
#define SDRAM_T_RP 20.0
#define SDRAM_T_WR 14.0


/*
 * sdram configuration as viewed by sgdma_receive_m_write
 *
 */

#define SGDMA_RECEIVE_M_WRITE_SDRAM_BASE 0x1000000
#define SGDMA_RECEIVE_M_WRITE_SDRAM_CAS_LATENCY 3
#define SGDMA_RECEIVE_M_WRITE_SDRAM_CONTENTS_INFO
#define SGDMA_RECEIVE_M_WRITE_SDRAM_INIT_NOP_DELAY 0.0
#define SGDMA_RECEIVE_M_WRITE_SDRAM_INIT_REFRESH_COMMANDS 2
#define SGDMA_RECEIVE_M_WRITE_SDRAM_IRQ -1
#define SGDMA_RECEIVE_M_WRITE_SDRAM_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SGDMA_RECEIVE_M_WRITE_SDRAM_IS_INITIALIZED 1
#define SGDMA_RECEIVE_M_WRITE_SDRAM_NAME "/dev/sdram"
#define SGDMA_RECEIVE_M_WRITE_SDRAM_POWERUP_DELAY 100.0
#define SGDMA_RECEIVE_M_WRITE_SDRAM_REFRESH_PERIOD 15.625
#define SGDMA_RECEIVE_M_WRITE_SDRAM_REGISTER_DATA_IN 1
#define SGDMA_RECEIVE_M_WRITE_SDRAM_SDRAM_ADDR_WIDTH 0x17
#define SGDMA_RECEIVE_M_WRITE_SDRAM_SDRAM_BANK_WIDTH 2
#define SGDMA_RECEIVE_M_WRITE_SDRAM_SDRAM_COL_WIDTH 9
#define SGDMA_RECEIVE_M_WRITE_SDRAM_SDRAM_DATA_WIDTH 16
#define SGDMA_RECEIVE_M_WRITE_SDRAM_SDRAM_NUM_BANKS 4
#define SGDMA_RECEIVE_M_WRITE_SDRAM_SDRAM_NUM_CHIPSELECTS 1
#define SGDMA_RECEIVE_M_WRITE_SDRAM_SDRAM_ROW_WIDTH 12
#define SGDMA_RECEIVE_M_WRITE_SDRAM_SHARED_DATA 0
#define SGDMA_RECEIVE_M_WRITE_SDRAM_SIM_MODEL_BASE 0
#define SGDMA_RECEIVE_M_WRITE_SDRAM_SPAN 16777216
#define SGDMA_RECEIVE_M_WRITE_SDRAM_STARVATION_INDICATOR 0
#define SGDMA_RECEIVE_M_WRITE_SDRAM_TRISTATE_BRIDGE_SLAVE ""
#define SGDMA_RECEIVE_M_WRITE_SDRAM_TYPE "altera_avalon_new_sdram_controller"
#define SGDMA_RECEIVE_M_WRITE_SDRAM_T_AC 5.5
#define SGDMA_RECEIVE_M_WRITE_SDRAM_T_MRD 3
#define SGDMA_RECEIVE_M_WRITE_SDRAM_T_RCD 20.0
#define SGDMA_RECEIVE_M_WRITE_SDRAM_T_RFC 70.0
#define SGDMA_RECEIVE_M_WRITE_SDRAM_T_RP 20.0
#define SGDMA_RECEIVE_M_WRITE_SDRAM_T_WR 14.0


/*
 * sdram configuration as viewed by sgdma_transmit_m_read
 *
 */

#define SGDMA_TRANSMIT_M_READ_SDRAM_BASE 0x1000000
#define SGDMA_TRANSMIT_M_READ_SDRAM_CAS_LATENCY 3
#define SGDMA_TRANSMIT_M_READ_SDRAM_CONTENTS_INFO
#define SGDMA_TRANSMIT_M_READ_SDRAM_INIT_NOP_DELAY 0.0
#define SGDMA_TRANSMIT_M_READ_SDRAM_INIT_REFRESH_COMMANDS 2
#define SGDMA_TRANSMIT_M_READ_SDRAM_IRQ -1
#define SGDMA_TRANSMIT_M_READ_SDRAM_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SGDMA_TRANSMIT_M_READ_SDRAM_IS_INITIALIZED 1
#define SGDMA_TRANSMIT_M_READ_SDRAM_NAME "/dev/sdram"
#define SGDMA_TRANSMIT_M_READ_SDRAM_POWERUP_DELAY 100.0
#define SGDMA_TRANSMIT_M_READ_SDRAM_REFRESH_PERIOD 15.625
#define SGDMA_TRANSMIT_M_READ_SDRAM_REGISTER_DATA_IN 1
#define SGDMA_TRANSMIT_M_READ_SDRAM_SDRAM_ADDR_WIDTH 0x17
#define SGDMA_TRANSMIT_M_READ_SDRAM_SDRAM_BANK_WIDTH 2
#define SGDMA_TRANSMIT_M_READ_SDRAM_SDRAM_COL_WIDTH 9
#define SGDMA_TRANSMIT_M_READ_SDRAM_SDRAM_DATA_WIDTH 16
#define SGDMA_TRANSMIT_M_READ_SDRAM_SDRAM_NUM_BANKS 4
#define SGDMA_TRANSMIT_M_READ_SDRAM_SDRAM_NUM_CHIPSELECTS 1
#define SGDMA_TRANSMIT_M_READ_SDRAM_SDRAM_ROW_WIDTH 12
#define SGDMA_TRANSMIT_M_READ_SDRAM_SHARED_DATA 0
#define SGDMA_TRANSMIT_M_READ_SDRAM_SIM_MODEL_BASE 0
#define SGDMA_TRANSMIT_M_READ_SDRAM_SPAN 16777216
#define SGDMA_TRANSMIT_M_READ_SDRAM_STARVATION_INDICATOR 0
#define SGDMA_TRANSMIT_M_READ_SDRAM_TRISTATE_BRIDGE_SLAVE ""
#define SGDMA_TRANSMIT_M_READ_SDRAM_TYPE "altera_avalon_new_sdram_controller"
#define SGDMA_TRANSMIT_M_READ_SDRAM_T_AC 5.5
#define SGDMA_TRANSMIT_M_READ_SDRAM_T_MRD 3
#define SGDMA_TRANSMIT_M_READ_SDRAM_T_RCD 20.0
#define SGDMA_TRANSMIT_M_READ_SDRAM_T_RFC 70.0
#define SGDMA_TRANSMIT_M_READ_SDRAM_T_RP 20.0
#define SGDMA_TRANSMIT_M_READ_SDRAM_T_WR 14.0


/*
 * sgdma_receive configuration
 *
 */

#define ALT_MODULE_CLASS_sgdma_receive altera_avalon_sgdma
#define SGDMA_RECEIVE_ADDRESS_WIDTH 32
#define SGDMA_RECEIVE_ALWAYS_DO_MAX_BURST 1
#define SGDMA_RECEIVE_ATLANTIC_CHANNEL_DATA_WIDTH 4
#define SGDMA_RECEIVE_AVALON_MM_BYTE_REORDER_MODE 1
#define SGDMA_RECEIVE_BASE 0x2001080
#define SGDMA_RECEIVE_BURST_DATA_WIDTH 8
#define SGDMA_RECEIVE_BURST_TRANSFER 0
#define SGDMA_RECEIVE_BYTES_TO_TRANSFER_DATA_WIDTH 16
#define SGDMA_RECEIVE_CHAIN_WRITEBACK_DATA_WIDTH 32
#define SGDMA_RECEIVE_COMMAND_FIFO_DATA_WIDTH 104
#define SGDMA_RECEIVE_CONTROL_DATA_WIDTH 8
#define SGDMA_RECEIVE_CONTROL_SLAVE_ADDRESS_WIDTH 0x4
#define SGDMA_RECEIVE_CONTROL_SLAVE_DATA_WIDTH 32
#define SGDMA_RECEIVE_DESCRIPTOR_READ_BURST 0
#define SGDMA_RECEIVE_DESC_DATA_WIDTH 32
#define SGDMA_RECEIVE_HAS_READ_BLOCK 0
#define SGDMA_RECEIVE_HAS_WRITE_BLOCK 1
#define SGDMA_RECEIVE_IN_ERROR_WIDTH 0
#define SGDMA_RECEIVE_IRQ 4
#define SGDMA_RECEIVE_IRQ_INTERRUPT_CONTROLLER_ID 0
#define SGDMA_RECEIVE_NAME "/dev/sgdma_receive"
#define SGDMA_RECEIVE_OUT_ERROR_WIDTH 0
#define SGDMA_RECEIVE_READ_BLOCK_DATA_WIDTH 32
#define SGDMA_RECEIVE_READ_BURSTCOUNT_WIDTH 4
#define SGDMA_RECEIVE_SPAN 64
#define SGDMA_RECEIVE_STATUS_TOKEN_DATA_WIDTH 24
#define SGDMA_RECEIVE_STREAM_DATA_WIDTH 32
#define SGDMA_RECEIVE_SYMBOLS_PER_BEAT 4
#define SGDMA_RECEIVE_TYPE "altera_avalon_sgdma"
#define SGDMA_RECEIVE_UNALIGNED_TRANSFER 0
#define SGDMA_RECEIVE_WRITE_BLOCK_DATA_WIDTH 32
#define SGDMA_RECEIVE_WRITE_BURSTCOUNT_WIDTH 4


/*
 * sgdma_transmit configuration
 *
 */

#define ALT_MODULE_CLASS_sgdma_transmit altera_avalon_sgdma
#define SGDMA_TRANSMIT_ADDRESS_WIDTH 32
#define SGDMA_TRANSMIT_ALWAYS_DO_MAX_BURST 1
#define SGDMA_TRANSMIT_ATLANTIC_CHANNEL_DATA_WIDTH 4
#define SGDMA_TRANSMIT_AVALON_MM_BYTE_REORDER_MODE 1
#define SGDMA_TRANSMIT_BASE 0x20010c0
#define SGDMA_TRANSMIT_BURST_DATA_WIDTH 8
#define SGDMA_TRANSMIT_BURST_TRANSFER 0
#define SGDMA_TRANSMIT_BYTES_TO_TRANSFER_DATA_WIDTH 16
#define SGDMA_TRANSMIT_CHAIN_WRITEBACK_DATA_WIDTH 32
#define SGDMA_TRANSMIT_COMMAND_FIFO_DATA_WIDTH 104
#define SGDMA_TRANSMIT_CONTROL_DATA_WIDTH 8
#define SGDMA_TRANSMIT_CONTROL_SLAVE_ADDRESS_WIDTH 0x4
#define SGDMA_TRANSMIT_CONTROL_SLAVE_DATA_WIDTH 32
#define SGDMA_TRANSMIT_DESCRIPTOR_READ_BURST 0
#define SGDMA_TRANSMIT_DESC_DATA_WIDTH 32
#define SGDMA_TRANSMIT_HAS_READ_BLOCK 1
#define SGDMA_TRANSMIT_HAS_WRITE_BLOCK 0
#define SGDMA_TRANSMIT_IN_ERROR_WIDTH 0
#define SGDMA_TRANSMIT_IRQ 3
#define SGDMA_TRANSMIT_IRQ_INTERRUPT_CONTROLLER_ID 0
#define SGDMA_TRANSMIT_NAME "/dev/sgdma_transmit"
#define SGDMA_TRANSMIT_OUT_ERROR_WIDTH 0
#define SGDMA_TRANSMIT_READ_BLOCK_DATA_WIDTH 32
#define SGDMA_TRANSMIT_READ_BURSTCOUNT_WIDTH 4
#define SGDMA_TRANSMIT_SPAN 64
#define SGDMA_TRANSMIT_STATUS_TOKEN_DATA_WIDTH 24
#define SGDMA_TRANSMIT_STREAM_DATA_WIDTH 32
#define SGDMA_TRANSMIT_SYMBOLS_PER_BEAT 4
#define SGDMA_TRANSMIT_TYPE "altera_avalon_sgdma"
#define SGDMA_TRANSMIT_UNALIGNED_TRANSFER 0
#define SGDMA_TRANSMIT_WRITE_BLOCK_DATA_WIDTH 32
#define SGDMA_TRANSMIT_WRITE_BURSTCOUNT_WIDTH 4


/*
 * timer configuration
 *
 */

#define ALT_MODULE_CLASS_timer altera_avalon_timer
#define TIMER_ALWAYS_RUN 0
#define TIMER_BASE 0x2001100
#define TIMER_COUNTER_SIZE 32
#define TIMER_FIXED_PERIOD 0
#define TIMER_FREQ 100000000
#define TIMER_IRQ 2
#define TIMER_IRQ_INTERRUPT_CONTROLLER_ID 0
#define TIMER_LOAD_VALUE 99999
#define TIMER_MULT 0.001
#define TIMER_NAME "/dev/timer"
#define TIMER_PERIOD 1
#define TIMER_PERIOD_UNITS "ms"
#define TIMER_RESET_OUTPUT 0
#define TIMER_SNAPSHOT 1
#define TIMER_SPAN 32
#define TIMER_TICKS_PER_SEC 1000.0
#define TIMER_TIMEOUT_PULSE_OUTPUT 0
#define TIMER_TYPE "altera_avalon_timer"

#endif /* __SYSTEM_H_ */
